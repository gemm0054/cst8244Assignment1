#ifndef DES_H
#define DES_H

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define MAX_MSG_SIZE 128

// Define states for the controller
#define NUM_STATES 7
typedef enum {
    STATE_IDLE = 0,
    STATE_WAIT_FOR_GUARD_UNLOCK = 1,
	STATE_WAIT_FOR_GUARD_LOCK = 2,
    STATE_WAIT_FOR_DOOR_OPEN = 3,
    STATE_WAIT_FOR_SCALE = 4,
    STATE_WAIT_FOR_DOOR_CLOSE = 5,
    STATE_EXIT = 6
} State;
#define NUM_EVENTS 13
// Define events that trigger state transitions
typedef enum {
    EVENT_LEFT_SCAN,        // ls
    EVENT_RIGHT_SCAN,       // rs
    EVENT_WEIGHT_SCALE,     // ws
    EVENT_LEFT_OPEN,        // lo
    EVENT_RIGHT_OPEN,       // ro
    EVENT_LEFT_CLOSED,      // lc
    EVENT_RIGHT_CLOSED,     // rc
    EVENT_GUARD_LEFT_UNLOCK,  // glu
    EVENT_GUARD_LEFT_LOCK,    // gll
    EVENT_GUARD_RIGHT_UNLOCK, // gru
    EVENT_GUARD_RIGHT_LOCK,   // grl
    EVENT_INVALID,
	EVENT_EXIT,				// exit
	EVENT_STATUS
} Event;

const char *inMessage[NUM_EVENTS] = {
		"ls",
		"rs",
		"ws",
		"lo",
		"ro",
		"lc",
		"rc",
		"glu",
		"gll",
		"gru",
		"grl",
		"exit"
};

// Structure for messages between processes
typedef struct {
    Event event;
    int person_id;
    int weight;
    char status[MAX_MSG_SIZE];
} Message;

#define NUM_OUTPUTS 16
typedef enum
{
	PROMPT_MSG = 0,
	ID_MSG = 1,
	LS_MSG = 2,
	RS_MSG = 3,
	GU_MSG = 4,
	GLU_MSG = 5,
	GRU_MSG = 6,
	GLL_MSG = 7,
	GRL_MSG = 8,
	LO_MSG = 9,
	RO_MSG = 10,
	WS_MSG = 11,
	WSP_MSG = 12,
	LC_MSG = 13,
	RC_MSG = 14,
	INVALID_MSG = 15,
} Output;
const char *outMessage[NUM_OUTPUTS] = {
		"Enter DES input-event (ls = left scan, rs = rightscan, ws weight scale, lo = left open, ro = right open, lc = left closed, rc = right closed, gru = guard right unlock, grl = guard right lock, glu = guard left unlock, gll = guard left lock, exit = exit programs): \n",
		"Enter person ID: \n",
		"Left card scanned: ",
		"Right card scanned: ",
		"Waiting for guard unlock.",
		"Guard unlocked the left door. Waiting for left door to open.",
		"Guard unlocked the right door. Waiting for right door to open.",
		"Guard locked the left door. Waiting for right door unlock."
		"Guard locked the right door. Waiting for left door unlock."
		"Left door opened. Waiting for weight scale.",
		"Right door opened. Waiting for weight scale.",
		"Enter person's weight: \n",
		"Weight recorded: ",
		"Waiting for left door close.",
		"Waiting for right door close.",
		"Invalid input"

};
#endif // DES_H
